const TelegramBot = require('node-telegram-bot-api');
const token = '7265667932:AAEuR8T-9hiUB8Mr2oj5ZB_Lrl2RjYFYpLU';
const bot = new TelegramBot(token, {polling: true});

let OWNER_CHAT_ID = null; // –ú—ã –ø–æ–ª—É—á–∏–º —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∑–∂–µ
const CARD_NUMBER = '2204 1201 0153 2774'; // –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã
let dataMessage = ''; // –°–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞
function isOwner(chatId) {
    return chatId === OWNER_CHAT_ID;
}

let stats = {
    users: new Set(),
    tariffClicks: 0,
    tariffSelections: {
        '1 –º–µ—Å—è—Ü': 0,
        '2 –º–µ—Å—è—Ü–∞': 0,
        '3 –º–µ—Å—è—Ü–∞': 0,
        '6 –º–µ—Å—è—Ü–µ–≤': 0,
        '1 –≥–æ–¥': 0
    },
    fioSubmissions: 0,
    confirmations: 0
};

const tariffs = {
    '1 –º–µ—Å—è—Ü': 200,
    '2 –º–µ—Å—è—Ü–∞': 300,
    '3 –º–µ—Å—è—Ü–∞': 400,
    '6 –º–µ—Å—è—Ü–µ–≤': 700,
    '1 –≥–æ–¥': 1200
};

bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    stats.users.add(chatId);
    const opts = {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–£–∑–Ω–∞—Ç—å –æ —Ç–∞—Ä–∏—Ñ–∞—Ö', callback_data: 'tariffs' }]
            ]
        }
    };
    bot.sendMessage(chatId, '\t\t\*–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ –¥—Ä—É–∑—å—è!\*\n\nüçÇ \*–ó–¥–µ—Å—å\* –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç \*Chat GPT —Å –ø–æ–¥–ø–∏—Å–∫–æ–π\*\n\nüçÇ \*–ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:\*\n\nüåà \*–õ–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π\* –∞–∫–∫–∞—É–Ω—Ç –°hat GPT 4 (–Ω–∞ —Å–∞–π—Ç–µ https://chat.openai.com)\nüåà \*–ì–∞—Ä–∞–Ω—Ç–∏—é\* –Ω–∞ –æ–ø–ª–∞—á–µ–Ω—ã–π –ø–µ—Ä–∏–æ–¥\nüåà \*–û–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É\*, –µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã.\nüåà \*–ü—Ä–∏—è—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç–∑—ã–≤!\*\nüåà \*–†–µ–¥–∫–æ\* –±—ã–≤–∞—é—Ç \*–ª–∏–º–∏—Ç—ã\*\nüåà –î–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –∏–º–µ–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å \*–¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –ø–ª–∞–≥–∏–Ω—ã\*\n\nüçÇ\*–ß—Ç–æ —É–º–µ–µ—Ç CHATGPT 4.0 PLUS:\*\nüî• –ú–æ–∂–µ—Ç \*—Ä–µ—à–∏—Ç—å\* –ª—é–±—É—é \*–∑–∞–¥–∞—á—É —Å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞\*\nüî• –ü–æ–º–æ–≥–∞–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å \*–±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω\*\nüî• \*–ü—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç–∞\* –¥–ª—è instagram, Telegram, VK.\nüî• \*–°—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –≤–∞—à–∏—Ö –≤–∏–¥–µ–æ\* –Ω–∞ YouTube –∫–∞–Ω–∞–ª–µ.\nüî• \*–û–±—ä—è—Å–Ω—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ\* —Å–ª–æ–∂–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞\nüî• \*–ü–∏—à–µ—Ç –ø—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–µ –∏–≥—Ä—ã\* –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —è–∑—ã–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\nüî• –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å–∫–µ—Ç—á –≤–µ–±-—Å–∞–π—Ç–∞ \*–≤ —Ä–∞–±–æ—á–∏–π –∫–æ–¥\*\nüî• –ò –µ—â–µ –º–Ω–æ–≥–æ —á–µ–≥–æ.\n\n ‚ù§Ô∏è–£ –Ω–∞—Å —Å–∞–º–∞—è —Å–ª–∞–¥–∫–∞—è –∏ –Ω–∏–∑–∫–∞—è —Ü–µ–Ω–∞. üòé\n\n\*–ù–ê–ñ–ú–ò–¢–ï –ö–ù–û–ü–ö–£\* –ù–ò–ñ–ï, –ß–¢–û–ë–´ –£–ó–ù–ê–¢–¨ –û \*–¢–ê–†–ò–§–ù–´–• –ü–õ–ê–ù–ê–•\*.', {reply_markup: opts.reply_markup, parse_mode: 'Markdown'});
});

bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id;
    const username = query.message.chat.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

    if (query.data === 'tariffs') {
        stats.tariffClicks += 1;
        const opts = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '1 –º–µ—Å—è—Ü', callback_data: '1_month' }],
                    [{ text: '2 –º–µ—Å—è—Ü–∞', callback_data: '2_months' }],
                    [{ text: '3 –º–µ—Å—è—Ü–∞', callback_data: '3_months' }],
                    [{ text: '6 –º–µ—Å—è—Ü–µ–≤', callback_data: '6_months' }],
                    [{ text: '1 –≥–æ–¥', callback_data: '1_year' }],
                    [{ text: '–ù–∞–∑–∞–¥', callback_data: 'back' }]
                ]
            }
        };
        bot.editMessageText('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:', {chat_id: chatId, message_id: query.message.message_id, reply_markup: opts.reply_markup});
    } else if (query.data === 'back') {
        const opts = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–£–∑–Ω–∞—Ç—å –æ —Ç–∞—Ä–∏—Ñ–∞—Ö', callback_data: 'tariffs' }]
                ]
            }
        };
        bot.editMessageText('\t\t\*–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ –¥—Ä—É–∑—å—è!\*\n\nüçÇ \*–ó–¥–µ—Å—å\* –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç \*Chat GPT —Å –ø–æ–¥–ø–∏—Å–∫–æ–π\*\n\nüçÇ \*–ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:\*\n\nüåà \*–õ–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π\* –∞–∫–∫–∞—É–Ω—Ç –°hat GPT 4 (–Ω–∞ —Å–∞–π—Ç–µ https://chat.openai.com)\nüåà \*–ì–∞—Ä–∞–Ω—Ç–∏—é\* –Ω–∞ –æ–ø–ª–∞—á–µ–Ω—ã–π –ø–µ—Ä–∏–æ–¥\nüåà \*–û–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É\*, –µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã.\nüåà \*–ü—Ä–∏—è—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç–∑—ã–≤!\*\nüåà \*–†–µ–¥–∫–æ\* –±—ã–≤–∞—é—Ç \*–ª–∏–º–∏—Ç—ã\*\nüåà –î–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –∏–º–µ–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å \*–¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –ø–ª–∞–≥–∏–Ω—ã\*\n\nüçÇ\*–ß—Ç–æ —É–º–µ–µ—Ç CHATGPT 4.0 PLUS:\*\nüî• –ú–æ–∂–µ—Ç \*—Ä–µ—à–∏—Ç—å\* –ª—é–±—É—é \*–∑–∞–¥–∞—á—É —Å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞\*\nüî• –ü–æ–º–æ–≥–∞–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å \*–±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω\*\nüî• \*–ü—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç–∞\* –¥–ª—è instagram, Telegram, VK.\nüî• \*–°—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –≤–∞—à–∏—Ö –≤–∏–¥–µ–æ\* –Ω–∞ YouTube –∫–∞–Ω–∞–ª–µ.\nüî• \*–û–±—ä—è—Å–Ω—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ\* —Å–ª–æ–∂–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞\nüî• \*–ü–∏—à–µ—Ç –ø—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–µ –∏–≥—Ä—ã\* –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —è–∑—ã–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\nüî• –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å–∫–µ—Ç—á –≤–µ–±-—Å–∞–π—Ç–∞ \*–≤ —Ä–∞–±–æ—á–∏–π –∫–æ–¥\*\nüî• –ò –µ—â–µ –º–Ω–æ–≥–æ —á–µ–≥–æ.\n\n ‚ù§Ô∏è–£ –Ω–∞—Å —Å–∞–º–∞—è —Å–ª–∞–¥–∫–∞—è –∏ –Ω–∏–∑–∫–∞—è —Ü–µ–Ω–∞. üòé\n\n\*–ù–ê–ñ–ú–ò–¢–ï –ö–ù–û–ü–ö–£\* –ù–ò–ñ–ï, –ß–¢–û–ë–´ –£–ó–ù–ê–¢–¨ –û \*–¢–ê–†–ò–§–ù–´–• –ü–õ–ê–ù–ê–•\*.', {chat_id: chatId, message_id: query.message.message_id, reply_markup: opts.reply_markup, parse_mode: 'Markdown'});
    } else if (['1_month', '2_months', '3_months', '6_months', '1_year'].includes(query.data)) {
        const tariffKeyMap = {
            '1_month': '1 –º–µ—Å—è—Ü',
            '2_months': '2 –º–µ—Å—è—Ü–∞',
            '3_months': '3 –º–µ—Å—è—Ü–∞',
            '6_months': '6 –º–µ—Å—è—Ü–µ–≤',
            '1_year': '1 –≥–æ–¥'
        };
        const tariffKey = tariffKeyMap[query.data];
        const price = tariffs[tariffKey];
        stats.tariffSelections[tariffKey] += 1;
        const opts = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ', callback_data: `enter_fio_${tariffKey}` }],
                    [{ text: '–ù–∞–∑–∞–¥', callback_data: 'tariffs' }]
                ]
            }
        };
        bot.editMessageText(`–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ \*${tariffKey}\*. –¶–µ–Ω–∞: \*${price} —Ä—É–±–ª–µ–π\*.\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –∫–∞—Ä—Ç—É:\n\n \`${CARD_NUMBER}\`  (–ù–æ–º–µ—Ä –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è).\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ \*–æ—Ç–ø—Ä–∞–≤—å—Ç–µ\* —Å–≤–æ–∏ \*–ø–æ—Å–ª–µ–¥–Ω–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã\* —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∫–∞—Ä—Ç—ã, \n\*–∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç–µ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å\*, –¥–ª—è \* –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏\*.`, {chat_id: chatId, message_id: query.message.message_id, reply_markup: opts.reply_markup, parse_mode: 'Markdown'});
    } else if (query.data.startsWith('enter_fio_')) {
        const tariffText = query.data.split('_').slice(2).join(' ');
        bot.deleteMessage(chatId, query.message.message_id - 1);
        bot.deleteMessage(chatId, query.message.message_id);
        bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:');
        bot.once('message', (msg) => {
            const fio = msg.text;
            stats.fioSubmissions += 1;
            const opts = {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–î–ê', callback_data: `confirm_${tariffText}_${fio}` }],
                        [{ text: '–ù–∞–∑–∞–¥', callback_data: `tariffs` }]
                    ]
                }
            };
            bot.sendMessage(chatId, '–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∑–∞–∫–∞–∑? –ù–∞–∂–º–∏—Ç–µ "–î–ê", –µ—Å–ª–∏ –≤—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞.', opts);
        });
    } else if (query.data.startsWith('confirm_')) {
        stats.confirmations += 1;
        const [_, tariffText, fio] = query.data.split('_');
        bot.sendMessage(chatId, '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ. –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à –ø–ª–∞—Ç–µ–∂. –û–∂–∏–¥–∞–π—Ç–µ, –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∑–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç, —Ç–æ –∏—Å–ø–ª—å–∑—É–π—Ç–µ VPN, –ª–∏–±–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–∂–µ—Ä–∂–∫–æ–π.\n\n–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥—Ä–µ–∂–∫–∞: @gpt4o_support');
        if (OWNER_CHAT_ID) {
            const opts = {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–û—Ç–ø–∏—Å–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É', callback_data: `reply_${chatId}` }],
                        [{ text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—É', callback_data: `senddata_${chatId}` }]
                    ]
                }
            };
            bot.sendMessage(OWNER_CHAT_ID, `–ö–ª–∏–µ–Ω—Ç @${username} (ID: ${chatId}) –≤—ã–±—Ä–∞–ª —Ç–∞—Ä–∏—Ñ: ${tariffText}. –§–ò–û: ${fio}.`, opts);
        } else {
            bot.sendMessage(chatId, '–í–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.');
        }
    } else if (query.data.startsWith('reply_')) {
        const targetId = query.data.split('_')[1];
        bot.sendMessage(OWNER_CHAT_ID, `/sendto ${targetId} `, {reply_markup: {force_reply: true}});
    } else if (query.data.startsWith('senddata_')) {
        const targetId = query.data.split('_')[1];
        if (dataMessage) {
            bot.sendMessage(targetId, dataMessage);
            bot.sendMessage(OWNER_CHAT_ID, `–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID: ${targetId}`);
        } else {
            bot.sendMessage(OWNER_CHAT_ID, '–°–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /setdata.');
        }
    }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ OWNER_CHAT_ID —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /setowner
bot.onText(/\/setowner/, (msg) => {
    const chatId = msg.chat.id;
    if (OWNER_CHAT_ID) {
        bot.sendMessage(chatId, `–í–ª–∞–¥–µ–ª–µ—Ü —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ï–≥–æ ID: ${OWNER_CHAT_ID}`);
    } else {
        OWNER_CHAT_ID = chatId;
        bot.sendMessage(OWNER_CHAT_ID, `–≠—Ç–æ—Ç —á–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ —á–∞—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞. –í–∞—à ID: ${OWNER_CHAT_ID}`);
    }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É
bot.onText(/\/sendto (\d+) (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    if (!isOwner(chatId)) {
        bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
        return;
    }

    const targetId = match[1];
    const message = match[2];
    if (targetId && message) {
        sendMessageToUser(targetId, message);
        bot.sendMessage(chatId, `–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID: ${targetId}`);
    } else {
        bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /sendto <user_id> <message>');
    }
});

// –ö–æ–º–∞–Ω–¥–∞ /stat –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
bot.onText(/\/stat/, (msg) => {
    const chatId = msg.chat.id;
    if (!isOwner(chatId)) {
        bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
        return;
    }

    const statsMessage = `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.users.size}
- –ü–µ—Ä–µ—Ö–æ–¥–æ–≤ –∫ —Ç–∞—Ä–∏—Ñ–∞–º: ${stats.tariffClicks}
- –í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–æ–≤:
  - 1 –º–µ—Å—è—Ü: ${stats.tariffSelections['1 –º–µ—Å—è—Ü']}
  - 2 –º–µ—Å—è—Ü–∞: ${stats.tariffSelections['2 –º–µ—Å—è—Ü–∞']}
  - 3 –º–µ—Å—è—Ü–∞: ${stats.tariffSelections['3 –º–µ—Å—è—Ü–∞']}
  - 6 –º–µ—Å—è—Ü–µ–≤: ${stats.tariffSelections['6 –º–µ—Å—è—Ü–µ–≤']}
  - 1 –≥–æ–¥: ${stats.tariffSelections['1 –≥–æ–¥']}
- –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –§–ò–û: ${stats.fioSubmissions}
- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –∑–∞–∫–∞–∑–æ–≤: ${stats.confirmations}`;

    bot.sendMessage(chatId, statsMessage);
});

// –ö–æ–º–∞–Ω–¥–∞ /setdata –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏
bot.onText(/\/setdata (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    if (!isOwner(chatId)) {
        bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
        return;
    }

    dataMessage = match[1];
    bot.sendMessage(chatId, '–°–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.');
});

// –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ ID
function sendMessageToUser(chatId, message) {
    if (chatId) {
        bot.sendMessage(chatId, message).catch(error => {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}:`, error);
        });
    } else {
        console.error('–û—à–∏–±–∫–∞: chat_id –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π');
    }
}

console.log('Bot is running...');
